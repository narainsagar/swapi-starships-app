{"version":3,"sources":["reducers/index.js","Root.js","components/StartShipItem.js","apis/swapi.js","components/StarShipsList.js","actions/index.js","components/App.js","index.js"],"names":["apiresult","state","action","type","payload","children","initialState","store","createStore","reducers","applyMiddleware","thunk","StarShipItem","starship","renderNumber","crew","className","name","passengers","rating","Progress","percent","percentage","parseFloat","success","renderHyperdriveProgress","hyperdrive_rating","axios","create","baseURL","connect","response","fetchStarships","pageNumber","dispatch","a","swapi","get","data","useEffect","renderPreviousBtn","prelink","Button","content","icon","labelPosition","onClick","handlePageLink","disabled","renderNextBtn","nextlink","link","substr","Object","keys","length","previous","next","results","map","StartShipItem","key","App","React","Component","ReactDOM","render","Root","document","querySelector"],"mappings":"gRAAe,SAASA,IAA8B,IAApBC,EAAmB,uDAAX,GAAIC,EAAO,uCACjD,OAAQA,EAAOC,MACX,IAAK,kBACD,OAAOD,EAAOE,QAClB,QACI,OAAOH,G,aCCJ,cAAoC,IAAlCI,EAAiC,EAAjCA,SAAiC,IAAvBC,oBAAuB,MAAR,GAAQ,EAC9C,OACI,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,EAAUH,EAAcI,YAAgBC,OAChEN,I,6DC0BEO,EA/BM,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAEbC,EAAe,SAACC,GAClB,OAAIA,GAAQ,EACD,OAEJA,GAWX,OACI,yBAAKC,UAAU,WACX,yBAAKA,UAAU,WACX,wBAAIA,UAAU,iBAAd,UAAsCH,EAASI,MAC/C,wBAAID,UAAU,iBAAd,UAAsCF,EAAaD,EAASE,OAC5D,wBAAIC,UAAU,iBAAd,eAA2CF,EAAaD,EAASK,aACjE,yBAAKF,UAAU,iBACX,wBAAIA,UAAU,QAAd,sBAfiB,SAACG,GAC9B,GAAe,YAAXA,EACA,OAAO,kBAACC,EAAA,EAAD,CAAUC,QAAS,IAE9B,IAAMC,EAAcC,WAAWJ,GAAQ,EAAM,IAC7C,OAAO,kBAACC,EAAA,EAAD,CAAUC,QAASC,EAAYE,SAAO,IAWhCC,CAAyBZ,EAASa,uB,mCC3BxCC,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,0B,SC6DEC,eAJS,SAAC7B,GACrB,MAAO,CAAE8B,SAAS9B,KAGkB,CAAC+B,eC9DX,SAACC,GAC3B,8CAAO,WAAOC,GAAP,eAAAC,EAAA,+EAEwBC,EAAMC,IAAN,2BAA8BJ,IAFtD,OAEOF,EAFP,OAGCG,EAAS,CAAC/B,KAAM,kBAAmBC,QAAS2B,EAASO,OAHtD,gDAKCJ,EAAS,CAAC/B,KAAM,eAAgBC,QAAS,UAL1C,yDAAP,wDD6DW0B,EAzDO,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,eAC9BO,qBAAU,WACNP,EAAe,OAChB,CAACA,IAEJ,IAQMQ,EAAoB,SAACC,GACvB,OAAKA,EAGE,kBAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,aAAaC,cAAc,OAAOC,QAAS,kBAAMC,EAAeN,MAF3F,kBAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,aAAaC,cAAc,OAAOG,UAAQ,KAOlFC,EAAgB,SAACC,GACnB,OAAKA,EAGE,kBAACR,EAAA,EAAD,CAAQC,QAAQ,OAAOC,KAAK,cAAcC,cAAc,QAAQC,QAAS,kBAAMC,EAAeG,MAF1F,kBAACR,EAAA,EAAD,CAAQC,QAAQ,OAAOC,KAAK,cAAcC,cAAc,QAAQG,UAAQ,KAKjFD,EAAiB,SAACI,GAChBA,GACAnB,EAAemB,EAAKC,QAAQ,KAGpC,OAAoC,IAAjCC,OAAOC,KAAKvB,GAAUwB,OACd,wCAIP,yBAAKvC,UAAU,0BACX,yBAAKA,UAAU,kBACVwB,EAAkBT,EAASyB,UAC3BP,EAAclB,EAAS0B,OAER1B,EAAS2B,QAtChBC,KAAI,SAAA9C,GACjB,OACI,kBAAC+C,EAAD,CAAe/C,SAAUA,EAAUgD,IAAKhD,EAASI,UAqCrD,yBAAKD,UAAU,kBACVwB,EAAkBT,EAASyB,UAC3BP,EAAclB,EAAS0B,WEhCzBK,E,uKAjBP,OACI,yBAAK9C,UAAU,OACX,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,eAAf,8BAKR,yBAAKA,UAAU,gBACX,kBAAC,EAAD,Y,GAZF+C,IAAMC,WCExBC,IAASC,OACL,kBAACC,EAAD,KACI,kBAAC,EAAD,OAEJC,SAASC,cAAc,Y","file":"static/js/main.f4eaaad5.chunk.js","sourcesContent":["export default function apiresult(state = [], action){\n    switch (action.type) {\n        case 'FETCH_STARSHIPS':\n            return action.payload;\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport { Provider } from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport reducers from './reducers';\nimport thunk from 'redux-thunk';\n\nexport default ({children, initialState = {}}) => {\n    return (\n        <Provider store={createStore(reducers, initialState, applyMiddleware(thunk))}>\n            {children}\n        </Provider>\n    );\n};","import './StarShipItem.css';\nimport React from 'react';\nimport { Progress } from 'semantic-ui-react'\n\nconst StarShipItem = ({starship}) => {\n\n    const renderNumber = (crew) => {\n        if (crew <= 0){\n            return \"None\"\n        }\n        return crew;\n    }\n\n    const renderHyperdriveProgress = (rating) => {\n        if (rating === \"unknown\")\n            return <Progress percent={0}/>;\n\n        const percentage = (parseFloat(rating)/6.0 * 100)\n        return <Progress percent={percentage} success/>;\n    }\n\n    return (\n        <div className=\"ui card\">\n            <div className=\"content\">\n                <h4 className=\"ui sub header\">Name : {starship.name}</h4>\n                <h4 className=\"ui sub header\">Crew : {renderNumber(starship.crew)}</h4>\n                <h4 className=\"ui sub header\">Passenger : {renderNumber(starship.passengers)}</h4>\n                <div className=\"ui sub header\">\n                    <h4 className=\"text\">HyperDrive Class :</h4>\n                    {renderHyperdriveProgress(starship.hyperdrive_rating)}\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default StarShipItem;","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://swapi.dev/api'\n});","import './StarShipsList.css';\nimport React, { useEffect } from 'react';\nimport StartShipItem from './StartShipItem';\nimport { connect } from 'react-redux';\nimport { fetchStarships } from '../actions';\nimport { Button } from 'semantic-ui-react';\n\nconst StarShipsList = ({response, fetchStarships}) => {\n    useEffect(() => {\n        fetchStarships(\"1\");\n    }, [fetchStarships]);\n\n    const renderStarshipItem = (starships) => {\n        return starships.map(starship => {\n            return (\n                <StartShipItem starship={starship} key={starship.name}/>\n            );\n        })\n    }\n\n    const renderPreviousBtn = (prelink) => {\n        if (!prelink)\n            return <Button content='Previos' icon='left arrow' labelPosition='left' disabled/>;\n\n        return <Button content='Previos' icon='left arrow' labelPosition='left' onClick={() => handlePageLink(prelink)}/>;\n        \n        \n    }\n\n    const renderNextBtn = (nextlink) => {\n        if (!nextlink)\n            return <Button content='Next' icon='right arrow' labelPosition='right' disabled/>;\n        \n        return <Button content='Next' icon='right arrow' labelPosition='right' onClick={() => handlePageLink(nextlink)}/>;\n    }\n\n    const handlePageLink = (link) => {\n        if (link)\n            fetchStarships(link.substr(-1));\n    }\n\n    if(Object.keys(response).length === 0){\n        return <div>No Data</div>;\n    }\n\n    return (\n        <div className=\"starships-list ui grid\">\n            <div className=\"paginationbtns\">\n                {renderPreviousBtn(response.previous)}\n                {renderNextBtn(response.next)}\n            </div>\n            {renderStarshipItem(response.results)}\n            <div className=\"paginationbtns\">\n                {renderPreviousBtn(response.previous)}\n                {renderNextBtn(response.next)}\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return { response:state }\n}\n\nexport default connect(mapStateToProps, {fetchStarships})(StarShipsList);","import swapi from '../apis/swapi';\n\nexport const fetchStarships = (pageNumber) => {\n    return async (dispatch) => {\n        try {\n            const response = await swapi.get(`/starships/?page=${pageNumber}`);\n            dispatch({type: 'FETCH_STARSHIPS', payload: response.data});\n        } catch(error) {\n            dispatch({type: 'HANDLE_ERROR', payload: 'error'});\n        }\n    };\n};","import React from 'react';\nimport StarShipsList from './StarShipsList';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div className=\"app\">\n                <div className=\"ui borderless main menu\">\n                    <div className=\"ui text container\">\n                        <div className=\"header item\">\n                            Swapi Starships Database\n                        </div>\n                    </div>\n                </div>\n                <div className=\"ui container\">\n                    <StarShipsList />\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './Root';\nimport App from './components/App';\n\nReactDOM.render(\n    <Root>\n        <App />\n    </Root>,\n    document.querySelector('#root')\n);"],"sourceRoot":""}